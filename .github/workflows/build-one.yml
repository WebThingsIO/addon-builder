name: Build one adapter

on:
  repository_dispatch:
    types: build-adapter

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          ubuntu-latest,
          macos-latest,
        ]
        pair: [
          'node:8',
          'node:10',
          'node:12',
          'python:3.5',
          'python:3.6',
          'python:3.7',
          'python:3.8',
        ]
        include:
          - pair: 'node:8'
            language: 'node'
            version: '8'
          - pair: 'node:10'
            language: 'node'
            version: '10'
          - pair: 'node:12'
            language: 'node'
            version: '12'
          - pair: 'python:3.5'
            language: 'python'
            version: '3.5'
          - pair: 'python:3.6'
            language: 'python'
            version: '3.6'
          - pair: 'python:3.7'
            language: 'python'
            version: '3.7'
          - pair: 'python:3.8'
            language: 'python'
            version: '3.8'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      if: ${{ matrix.language == 'node' && matrix.os == 'macos-latest' }}
      with:
        node-version: ${{ matrix.version }}
    - uses: actions/setup-python@v2
      if: ${{ matrix.language == 'python' && matrix.os == 'macos-latest' }}
      with:
        python-version: ${{ matrix.version }}
    - name: Install dependencies
      run: |
        if [ ${{ matrix.os }} = macos-latest ]; then
          brew install coreutils gnu-tar pkg-config
        else
          sudo apt -qq update
          sudo apt install --no-install-recommends -y \
            binfmt-support \
            qemu \
            qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        fi
        python -m pip install --upgrade pip
        python -m pip install --upgrade awscli
    - name: Build adapter
      env:
        ADAPTERS: ${{ github.event.client_payload.adapter }}
      run: |
        ./build-addons.sh "${{ matrix.language }}" "${{ matrix.version }}"
    - name: Upload to S3
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'builder'
        DEST_DIR: 'builder'
      run: |
        aws configure --profile s3-sync-action <<-EOF > /dev/null 2>&1
        ${AWS_ACCESS_KEY_ID}
        ${AWS_SECRET_ACCESS_KEY}
        ${AWS_REGION}
        text
        EOF
        aws s3 sync ${SOURCE_DIR} s3://${AWS_S3_BUCKET}/${DEST_DIR} \
              --profile s3-sync-action \
              --no-progress \
              --acl public-read
