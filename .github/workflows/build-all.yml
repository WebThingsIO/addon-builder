name: Build all adapters

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        platform: [
          'linux-arm',
          'linux-arm64',
          'linux-x64',
          'darwin-x64',
        ]
        pair: [
          'node:8',
          'node:10',
          'node:12',
          'python:3.5',
          'python:3.6',
          'python:3.7',
          'python:3.8',
        ]
        include:
          - platform: 'linux-arm'
            host-os: 'ubuntu-latest'
          - platform: 'linux-arm64'
            host-os: 'ubuntu-latest'
          - platform: 'linux-x64'
            host-os: 'ubuntu-latest'
          - platform: 'darwin-x64'
            host-os: 'macos-latest'
          - pair: 'node:8'
            language: 'node'
            version: '8'
          - pair: 'node:10'
            language: 'node'
            version: '10'
          - pair: 'node:12'
            language: 'node'
            version: '12'
          - pair: 'python:3.5'
            language: 'python'
            version: '3.5'
          - pair: 'python:3.6'
            language: 'python'
            version: '3.6'
          - pair: 'python:3.7'
            language: 'python'
            version: '3.7'
          - pair: 'python:3.8'
            language: 'python'
            version: '3.8'
    runs-on: ${{ matrix.host-os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      if: ${{ matrix.language == 'node' && matrix.host-os == 'macos-latest' }}
      with:
        node-version: ${{ matrix.version }}
    - uses: actions/setup-python@v2
      if: ${{ matrix.language == 'python' && matrix.host-os == 'macos-latest' }}
      with:
        python-version: ${{ matrix.version }}
    - name: Install dependencies
      run: |
        if [[ "${{ matrix.host-os }}" == "macos-latest" ]]; then
          brew install coreutils gnu-tar pkg-config
        elif [[ "${{ matrix.platform }}" != "linux-x64" ]]; then
          sudo apt -qq update
          sudo apt install --no-install-recommends -y \
            binfmt-support \
            qemu \
            qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        fi
    - name: Build adapters
      run: |
        ./build-addons.sh "${{ matrix.platform }}" "${{ matrix.language }}" "${{ matrix.version }}"
